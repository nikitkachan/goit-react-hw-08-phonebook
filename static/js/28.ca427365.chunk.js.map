{"version":3,"file":"static/js/28.ca427365.chunk.js","mappings":"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","sources":["redux/selectors/selectors.js","components/Loader/PhonebookLoader.jsx","components/AddContact/AddContact.jsx","components/ContactsList/ContactsList.jsx","components/FilterContacts/FilterContacts.jsx","pages/PhonebookPage/PhonebookPage.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.phonebook.contacts;\nexport const selectFavoriteContacts = state => state.phonebook.favoriteContacts;\nexport const selectIsLoading = state => state.phonebook.isLoading;\n\nexport const selectFilter = state => state.filter.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import React from 'react';\nimport { RotatingLines } from 'react-loader-spinner';\n\nconst PhonebookLoader = () => {\n  return (\n    <>\n      <RotatingLines\n        strokeColor=\"white\"\n        strokeWidth=\"5\"\n        animationDuration=\"0.75\"\n        width=\"26\"\n        visible={true}\n      />\n    </>\n  );\n};\n\nexport default PhonebookLoader;\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport Button from '@mui/material/Button';\n\nimport TextField from '@mui/material/TextField';\n\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\n\nimport { addContacts } from 'redux/contacts/contacts.reducer.js';\nimport { selectContacts } from 'redux/selectors/selectors.js';\nimport { toast } from 'react-toastify';\nimport { selectIsLoading } from 'redux/selectors/selectors.js';\nimport PhonebookLoader from 'components/Loader/PhonebookLoader';\n\nexport const AddContact = () => {\n  const dispatch = useDispatch();\n\n  const isLoading = useSelector(selectIsLoading);\n  const contacts = useSelector(selectContacts);\n\n  const handleAddContact = contactData => {\n    const isExist = contacts.some(contact => contact.name === contactData.name);\n    if (isExist) {\n      toast.error(`${contactData.name} is already in contacts.`);\n      return;\n    }\n\n    dispatch(addContacts(contactData));\n  };\n\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const contactData = {\n      name,\n      number: phone,\n    };\n\n    if (contactData.name.trim() === '') {\n      toast.error('Please enter name!');\n      return;\n    } else if (contactData.number.trim() === '') {\n      toast.error('Please enter phone number!');\n      return;\n    }\n    handleAddContact(contactData);\n    formReset();\n  };\n\n  const handleInputChange = event => {\n    const name = event.target.name;\n    const value = event.target.value;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'phone':\n        setPhone(value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const formReset = () => {\n    setName('');\n    setPhone('');\n  };\n\n  return (\n    <Box\n      component=\"form\"\n      noValidate\n      onSubmit={handleSubmit}\n      sx={{\n        marginTop: 8,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n      }}\n    >\n      <Grid container spacing={2}>\n        <Grid item xs={12}>\n          <TextField\n            required\n            fullWidth\n            id=\"name\"\n            type=\"text\"\n            name=\"name\"\n            label=\"Name\"\n            value={name}\n            onChange={handleInputChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces.\"\n            autoComplete=\"name\"\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <TextField\n            required\n            fullWidth\n            name=\"phone\"\n            label=\"Phone number\"\n            type=\"number\"\n            id=\"phone\"\n            autoComplete=\"tel\"\n            value={phone}\n            onChange={handleInputChange}\n            pattern=\"^\\+?\\d{1,4}[ .\\-]?\\(?\\d{1,3}\\)?[ .\\-]?\\d{1,4}[ .\\-]?\\d{1,4}[ .\\-]?\\d{1,9}$\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          />\n        </Grid>\n      </Grid>\n      <Button\n        type=\"submit\"\n        fullWidth\n        variant=\"contained\"\n        size=\"large\"\n        sx={{ mt: 3, mb: 2 }}\n      >\n        {isLoading ? <PhonebookLoader /> : 'Add contact'}\n      </Button>\n    </Box>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\n\nimport { deleteContacts } from 'redux/contacts/contacts.reducer';\nimport { selectVisibleContacts } from 'redux/selectors/selectors';\n\nimport {\n  Avatar,\n  Box,\n  IconButton,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  Typography,\n} from '@mui/material';\n// import FavoriteBorderIcon from '@mui/icons-material/FavoriteBorder';\nimport DeleteForeverRoundedIcon from '@mui/icons-material/DeleteForeverRounded';\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\n\nexport const ContactsList = () => {\n  const dispatch = useDispatch();\n\n  const filteredContacts = useSelector(selectVisibleContacts);\n\n  const handleDeleteContact = contactId => {\n    dispatch(deleteContacts(contactId));\n  };\n\n  // const handleAddToFavorite = contact => {\n  //   const favoriteContact = { ...contact, isFavorite: true };\n  //   dispatch(addToFavorite(favoriteContact));\n  // };\n\n  const sortedContacts = [...filteredContacts].sort((a, b) =>\n    a.name.localeCompare(b.name)\n  );\n\n  return (\n    <Box\n      sx={{\n        mt: 3,\n      }}\n    >\n      <Typography variant=\"h6\" sx={{ textAlign: 'center' }}>\n        Contacts\n      </Typography>\n      <List>\n        {filteredContacts.length > 0\n          ? sortedContacts.map(\n              contact =>\n                contact.isFavorite !== true && (\n                  <ListItem\n                    key={contact.id}\n                    secondaryAction={\n                      <>\n                        <IconButton\n                          edge=\"end\"\n                          aria-label=\"delete\"\n                          onClick={() => handleDeleteContact(contact.id)}\n                          sx={{ ml: 1 }}\n                        >\n                          <DeleteForeverRoundedIcon />\n                        </IconButton>\n                      </>\n                    }\n                  >\n                    <ListItemAvatar>\n                      <Avatar sx={{ bgcolor: 'action.main' }}>\n                        <AccountCircleIcon />\n                      </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText\n                      primary={contact.name}\n                      secondary={contact.number}\n                    />\n                  </ListItem>\n                )\n            )\n          : 'No contacts'}\n      </List>\n    </Box>\n  );\n};\n","import { Box, Grid, TextField } from '@mui/material';\nimport { useDispatch } from 'react-redux';\nimport { addToFilter } from 'redux/filter/filter.reducer';\n\nexport const FilterContacts = () => {\n  const dispatch = useDispatch();\n\n  const handleInputChange = event => {\n    const value = event.target.value;\n    dispatch(addToFilter(value));\n  };\n\n  return (\n    <Box\n      sx={{\n        mt: 8,\n      }}\n    >\n      <Grid container spacing={2}>\n        <Grid item xs={12}>\n          <TextField\n            fullWidth\n            id=\"name\"\n            type=\"text\"\n            name=\"name\"\n            label=\"Find contacts by name\"\n            onChange={handleInputChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          />\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { AddContact } from 'components/AddContact/AddContact';\nimport { ContactsList } from 'components/ContactsList/ContactsList';\nimport { selectVisibleContacts } from 'redux/selectors/selectors';\nimport { fetchContacts } from 'redux/contacts/contacts.reducer';\n\nimport { FilterContacts } from 'components/FilterContacts/FilterContacts';\n\nimport { Box, Container, CssBaseline, Grid, Typography } from '@mui/material';\nimport { ToastContainer } from 'react-toastify';\n\nconst PhonebookPage = () => {\n  const dispatch = useDispatch();\n\n  const filteredContacts = useSelector(selectVisibleContacts);\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n\n      <Box\n        sx={{\n          marginTop: 8,\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n        }}\n      >\n        <Typography component=\"h1\" variant=\"h2\">\n          Phonebook\n        </Typography>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <AddContact />\n          </Grid>\n          <Grid item xs={12}>\n            <FilterContacts />\n          </Grid>\n\n          {/* {filteredContacts.some(contact => contact.isFavorite === true) && (\n            <Grid item xs={12}>\n              <Favorite />\n            </Grid>\n          )} */}\n          {filteredContacts.length > 0 ? (\n            <Grid item xs={12}>\n              <ContactsList />\n            </Grid>\n          ) : (\n            <Box\n              sx={{\n                textAlign: 'center',\n                mt: 8,\n              }}\n            >\n              <Typography>\n                No contacts here. Please add a contact to your phonebook.\n              </Typography>\n            </Box>\n          )}\n        </Grid>\n      </Box>\n      <ToastContainer\n        position=\"top-center\"\n        autoClose={3000}\n        hideProgressBar\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n        theme=\"light\"\n      />\n    </Container>\n  );\n};\n\nexport default PhonebookPage;\n"],"names":["selectContacts","state","phonebook","contacts","selectIsLoading","isLoading","selectVisibleContacts","createSelector","filter","contact","name","toLowerCase","includes","_jsx","_Fragment","children","RotatingLines","strokeColor","strokeWidth","animationDuration","width","visible","AddContact","dispatch","useDispatch","useSelector","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","phone","setPhone","handleInputChange","event","target","value","formReset","_jsxs","Box","component","noValidate","onSubmit","preventDefault","contactData","number","trim","some","toast","concat","addContacts","handleAddContact","sx","marginTop","display","flexDirection","alignItems","Grid","container","spacing","item","xs","TextField","required","fullWidth","id","type","label","onChange","pattern","title","autoComplete","Button","variant","size","mt","mb","PhonebookLoader","ContactsList","filteredContacts","sortedContacts","_toConsumableArray","sort","a","b","localeCompare","Typography","textAlign","List","length","map","isFavorite","ListItem","secondaryAction","IconButton","edge","onClick","contactId","deleteContacts","ml","DeleteForeverRoundedIcon","ListItemAvatar","Avatar","bgcolor","AccountCircleIcon","ListItemText","primary","secondary","FilterContacts","addToFilter","useEffect","fetchContacts","Container","maxWidth","CssBaseline","ToastContainer","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","theme"],"sourceRoot":""}